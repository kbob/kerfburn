There is a protocol used between the Pi and the Azteeg.  I am calling
it Specificode to indicate that it is nonportable.

Specificode is made of packets of up to 256 bytes.

  A. At the "data link" layer (as in 7 layer cake), each packet has a 3
     byte header, up to 242 bytes of payload, and a 1 byte checksum.

     The header:
       byte 0: always SOH
       byte 1: sequence number
       byte 2: length, exclusive of header and trailer.

    For packets flowing from the Pi to the Azteeg, the sequence
    numbers starts at 0 at the beginning of the session and
    increments.  For packets flowing the other way, the sequence
    number indicates the most recent correctly received command from
    the Pi.

    The trailer:
       byte n-1: checksum

    The checksum is calculated like this.  It sums the header and the payload.

        cksum = 0xAA;
        for (i = 0; i < n; i++) {
            cksum = cksum << 1 | (cksum >> 7);   // rotate left
            cksum ^= c[i];
        }


  B. Each packet from the Pi to the Azteeg has a payload as follows.

        byte 3: command
        bytes 4..n-1: arguments
     
     The commands are listed below.

  C. Each packet from the Azteeg to the Pi has a payload as follows.

     

       byte   3: always 'S' (for Status)
       byte   4: sequence number of command currently being executed
       byte   5: Power relay mask
       byte   6: X axis motor status word
       byte   7: Y axis motor status word
       byte   8: Z axis motor status word
       byte   9: Main laser status word
       byte  10: Visible laser status word
       byte  11: Miscellaneous status word
       bytes 11-14: current X position
       bytes 15-18: current Y position
       bytes 19-22: current Z position
       byte  25: water temperature
       byte  26: current LED pattern

     More stuff:
          Water flow
          water temperature
          E-stop.
          data read error

     Power relay mask bits:
       0x01: ATX power on
       0x02: main laser power on
       0x04: water pump power on
       0x08: air assist pump power on

     Motor Status Word, one for each motor
       0x01: timer/counter active
       0x02: motor enabled
       0x04: motor direction (which direction is 1?)
       0x08: min limit detected
       0x10: max limit detected

     Laser Status Word
       bits 0-2: current mode
         0x00: off
         0x01: continuous
         0x02: pulse
         0x03: engraving
         0x04-0x07: reserved
       0x08: disabled because E-Stop engaged
       0x10: disabled because lid is open (main laser only)
       0x20: disabled because water is hot (main laser only)
       0x40: disabled because water is not flowing (main laser only)

     Miscellaneous status word
       0x01: E-Stop engaged
       0x02: water flow stopped
       0x04: 

     The motor positions are in microsteps from Home Position.
     If the position is unknown, the value is 0xFFFF.

     LED patterns are TBD, but 0x00 is all off.

     In the active timer/counter mask, 0x01 is X, 0x02 is Y, 0x03 is
     Z, and 0x04 is P.

     

   a. One protocol is between the Pi and the Azteeg,  I'm calling it
      SpecifiCode to indicate that it is nonportable.

   b. One protocol is between the Azteeg's top and bottom ends.
      (I think the bottom end is the interrupt service routines.)
      That protocol doesn't have a name, but it probably needs one
      

  D. Commands

     The Pi sends these commands and args to the Azteeg.

     0x00: Stop

     Stop all timer/counters immediately.  Turn off all lasers.
     Then go into idle mode.
           
     0x01: Pause
     Args: ms: number of milliseconds to pause
     
     Wait for currently enqueued commands to finish, then pause for ms
     milliseconds before executing next command.  Use 0 ms to execute
     next command as soon as current command finishes.

     0x03: Report Status

     Send a status message immediately.

     0x04: Enable ATX power
     0x05: Turn on Water Pump Power
     0x06: Turn on air assist Pump Power
     0x07: Turn on Main Laser Power
     0x08: Enable X motor
     0x09: Enable Y motor
     0x0A: Enable Z motor

     0x0B: Disable Z motor
     0x0C: Disable Y motor
     0x0D: Disable X motor
     0x0E: Turn off Main Laser Power
     0x0F: Turn off air assist Pump Power
     0x10: Turn off Water Pump Power
     0x11: Disable ATX power

     0x12: Set max water temperature

     0x20: Enqueue Segment
     Args:
           x: V0, Vmax, Vf, Amax
           y: V0, Vmax, Vf, Amax
           z: V0, Vmax, Vf, Amax
           main laser: mode, power level, steps/pulse, pulse duration
           visible laser: on/off
           watch limit switches: mask

     (define segment somewhere)
     
     more:
        enable/disable motors
        relays on/off
